// <auto-generated />
using System;
using ListagemDeFornecedores.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ListagemDeFornecedores.API.Migrations
{
    [DbContext(typeof(FornecedorContext))]
    partial class FornecedorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("ListagemDeFornecedores.API.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .HasColumnType("TEXT");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ListagemDeFornecedores.API.Models.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FornecedorId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Fornecedores");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Fornecedor");
                });

            modelBuilder.Entity("ListagemDeFornecedores.API.Models.FornecedorPF", b =>
                {
                    b.HasBaseType("ListagemDeFornecedores.API.Models.Fornecedor");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeFornecedor")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("FornecedorPF");
                });

            modelBuilder.Entity("ListagemDeFornecedores.API.Models.FornecedorPJ", b =>
                {
                    b.HasBaseType("ListagemDeFornecedores.API.Models.Fornecedor");

                    b.Property<int>("EmpresaFornecedorId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("FornecedorPJ");
                });

            modelBuilder.Entity("ListagemDeFornecedores.API.Models.Empresa", b =>
                {
                    b.HasOne("ListagemDeFornecedores.API.Models.FornecedorPJ", "fornecedorPJ")
                        .WithOne("EmpresaFornecedor")
                        .HasForeignKey("ListagemDeFornecedores.API.Models.Empresa", "EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ListagemDeFornecedores.API.Models.Fornecedor", b =>
                {
                    b.HasOne("ListagemDeFornecedores.API.Models.Empresa", "Empresa")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
