// <auto-generated />
using System;
using ListagemDeFornecedores.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ListagemDeFornecedores.Repository.Migrations
{
    [DbContext(typeof(FornecedoresContext))]
    [Migration("20200227143311_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("ListagemDeFornecedores.Domain.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .HasColumnType("TEXT");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ListagemDeFornecedores.Domain.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FornecedorId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Fornecedores");

                    b.HasDiscriminator<string>("Tipo").HasValue("Fornecedor");
                });

            modelBuilder.Entity("ListagemDeFornecedores.Domain.FornecedorPF", b =>
                {
                    b.HasBaseType("ListagemDeFornecedores.Domain.Fornecedor");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeFornecedor")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("PF");
                });

            modelBuilder.Entity("ListagemDeFornecedores.Domain.FornecedorPJ", b =>
                {
                    b.HasBaseType("ListagemDeFornecedores.Domain.Fornecedor");

                    b.Property<int>("EmpresaFornecedorId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("EmpresaFornecedorId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("PJ");
                });

            modelBuilder.Entity("ListagemDeFornecedores.Domain.Fornecedor", b =>
                {
                    b.HasOne("ListagemDeFornecedores.Domain.Empresa", "Empresa")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ListagemDeFornecedores.Domain.FornecedorPJ", b =>
                {
                    b.HasOne("ListagemDeFornecedores.Domain.Empresa", "EmpresaFornecedor")
                        .WithOne("fornecedorPJ")
                        .HasForeignKey("ListagemDeFornecedores.Domain.FornecedorPJ", "EmpresaFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
